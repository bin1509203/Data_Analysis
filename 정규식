###### 원하는 데이터를 쉽게 찾고 만드는 방법 - 정규식

정규식		설명						              예시
\\d		  Digit(숫자), 0, 1 ... 9
\\D		  숫자가 아닌것
\\s		  공백
\\S		  공백이 아닌것
\\w		  단어
\\W		  단어가 아닌것
\\t	  	Tab
\\n	  	New line(엔터)
^		    시작되는 글자				            '^A' : 대문자 'A'로 시작하는 단어 : Apple
$		    마지막 글자					           'e$' : 소문자 'e'로 끝나는 단어 : Grape
\	     	Escape character(탈출문자)			특수문자를 표기하기 위해 사용. \\ => "\" / \+ => "+" / \& => "&"
|	    	두개 이상의 조건을 동시에 지정
.	    	엔터(new line)를 제외한 모든 문자
[ab]		a 또는 b
[^ab]		a 와 b 를 제외한 모든 문자
[0-9]		모든 숫자
[A-Z]		영어 대문자
[a-z]		영어 소문자
[A-z]		모든 영문자
i+		    i가 최소 1회는 나오는 경우
i*		    i가 최소 0회 이상 나오는 경우
i?		    i가 최소 0회에서 최대 1회만 나오는 경우
i{n}		  i가 연속적으로 n회 나오는 경우
i{n1, n2}	i가 n1회에서 n2회 나오는 경우
i{n,}		  i가 n회 이상 나오는 경우
[:alnum:]	문자와 숫자가 나오는 경우
[:alpha:]	문자가 나오는 경우 = [:lower:] and [:upper:]
[:digit:]	숫자가 나오는 경우
[:blank:]	공백이 있는 경우
[:cntrl:]	제어문자가 있는 경우
[:graph:]	graphical 문자가 있는 경우:[:alnum:]and[:punct:]
[:lower:]	소문자가 있는 경우
[:upper:]	대문자가 있는 경우
[:print:]	숫자, 문자, 특수문자, 공백 모두 있는 경우
[:punct:]	특수 문자
[:space:]	공백문자
[:xdigit:]	16진수가 있는 경우





< Example Code>

> alert <- readLines("oracle_alert_testdb.log")
> error_1 <- gsub(" ", "_", alert) # 공백을 전부 _ 로 변환
> head(unlist(error_1), 20) # 확인

> error_2 <- unlist(error_1) # 필터링을 위해 unlist 형식으로 변환하여 저장
> error_2 <- Filter(function(x) {nchar(x) >= 5}, error_2) # 5글자 이상이 되는 것만 필터링
# nchar() => 입력된 배열이나 문자열의 길이를 알려준다.
> error_3 <- grep("^ORA-+", error_2, value=T) # ^ORA- 로 시작되는 문자열만 출력
# < grep(패턴, 원본데이터, value 옵션) >
# value = F : 패턴에 부합하는 단어가 오는 위치를 출력 / value = T : 패턴에 부합하는 단어를 출력

> write(unlist(error_3), "alert_testdb2.log") # list 형태로 정제된 data 저장
> rev <- read.table("alert_testdb2.log") # table data를 'rev'에 저장
> errorcount <- table(rev) # table data 형태로 'rev' 를 'errorcount'에 저장
> head(sort(errorcount, decreasing = T), 20)
> wordcloud(names(errorcount), freq=errorcount, scale=c(5,0.2), rot.per=0.25, min.freq=3,
+ random.order=F, random.color=T, colors=palete)

< Example Code + Graph>
> alert1 <- readLines("oracle_alert_testdb.log")
> alert2 <- grep("^ORA-+", alert1, value=T) # ORA- 로 시작하는 문자열만 필터링
> head(unlist(alert2), 5) # 확인
> alert3 <- substr(alert2, 5, 9) # ORA-XXXXX 형태이므로 숫자부분은 [5] 부터 [9] 사이에 위치한다. 이부분만 필터링
# < substr('문자열', 시작위치, 마지막위치) >
# substr('abc123', 2, 4) => "bc1"
# 여기서 문제가 발생한다. 모든 에러코드가 5자리는 아니므로 원치않는 문자가 [5]~[9] 사이에 올 수 있다.
> alert4 <- gsub("[A-z]", "", alert3) # 영어 대소문자 제거
> head(unlist(alert4), 20) # 확인

> write(unlist(alert4), "alert_4.txt")
> alert5 <- read.table("alert_4.txt")
> wordcount <- table(alert5)
> final <- head(sort(wordcount, decreasing = T), 10)
# 1) bar chart with #
> bp <- barplot(final, main="oracle error", 
+ col=rainbow(10), cex.names=0.7, las=2, ylim=c(0,4000))
> text(x=bp, y=final*1.05, labels=paste(final,"건"), col="black", cex=0.7)
# 2) bar chart with %
> dev.new() # 그래프를 따로 표시하기 위한 새 창 열기
> bp <- barplot(final, main="oracle error", 
+ col=rainbow(10), cex.names=0.7, las=2, ylim=c(0,4000))
> pct <- round(final/sum(final)*100, 1)
> text(x=bp, y=final*1.05, labels=paste(pct, "%"), col="black", cex=0.7)
# 3) line chart
# x축에 들어가는 error id 값을 계속 문자가 아닌 숫자로 인식하여서 제대로 된 그래프가 안나온다. ㅜ.ㅜ
